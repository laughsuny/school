<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rocksuny.dao.ISysroleDao" >
  <resultMap id="BaseResultMap" type="com.rocksuny.model.Sysrole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="desctxt" property="desctxt" jdbcType="VARCHAR" />
    <result column="buttons" property="buttons" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, rolename, desctxt, buttons, status, create_time, update_time, create_user
  </sql>
  
  <!-- 查找所有角色 -->
  <select id="getList" resultMap="BaseResultMap" >
  		select id,rolename from sysrole
  </select>
  
  <!-- 根据id删除 -->
  <delete id="delete" parameterType="java.lang.Integer">
  	delete from sysrole where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 批量删除 -->
  <delete id="deleteBatch" parameterType="string">
	delete from sysrole where id in (${ids})
  </delete>
  
  <!-- 更新角色 -->
  <update id="update" parameterType="java.lang.Integer">
  	update sysrole
    <set >
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="desctxt != null" >
        desctxt = #{desctxt,jdbcType=VARCHAR},
      </if>
      <if test="buttons != null" >
        buttons = #{buttons,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 保存角色 -->
  <insert id="save" parameterType="com.rocksuny.model.Sysrole" keyProperty="id" useGeneratedKeys="true">
    insert into sysrole (rolename, desctxt, 
      buttons, status, create_time, 
      update_time, create_user)
    values (#{rolename,jdbcType=VARCHAR}, #{desctxt,jdbcType=VARCHAR}, 
      #{buttons,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER})
  </insert>
  
  <!-- 根据id查找 -->
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  		select * from sysrole where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 分页查询条目总数 -->
  <select id="count" resultType="int" parameterType="Map">
		select count(*)
		from sysrole
		<where>
			<if test="null != searchStr">
				and rolename like '%${searchStr}%'
			</if>
			<if test="id != null" >
				and id = #{id,jdbcType=INTEGER}
		    </if>
	        <if test="rolename != null" >
	        	and rolename = #{rolename,jdbcType=VARCHAR}
	        </if>
	        <if test="desctxt != null" >
	        	and desctxt = #{desctxt,jdbcType=VARCHAR}
	        </if>
	        <if test="buttons != null" >
	        	and buttons = #{buttons,jdbcType=VARCHAR}
	        </if>
	        <if test="status != null" >
	        	and status = #{status,jdbcType=VARCHAR}
	        </if>
	        <if test="createTime != null" >
	        	and createTime = #{createTime,jdbcType=TIMESTAMP}
	        </if>
	        <if test="updateTime != null" >
	        	and updateTime = #{rolename,jdbcType=TIMESTAMP}
	        </if>
	        <if test="createUser != null" >
	        	and createUser = #{createUser,jdbcType=INTEGER}
	        </if>
	 </where>
  </select>
  
  <!-- 分页查询当前页数据 -->
  <select id="find" parameterType="Map" resultMap="BaseResultMap">
		select * from sysrole
		<where>
			<if test="null != searchStr">
				and rolename like '%${searchStr}%'
			</if>
    	</where>
    	<if test="null != start">
    		limit ${start},${count}
    	</if>
		<if test="null != orderSql">
   			order by #{orderSql}
   		</if>
   </select>
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sysrole
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sysrole
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rocksuny.model.Sysrole" >
    insert into sysrole (id, rolename, desctxt, 
      buttons, status, create_time, 
      update_time, create_user)
    values (#{id,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{desctxt,jdbcType=VARCHAR}, 
      #{buttons,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, 
      #{updateTime,jdbcType=DATE}, #{createUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rocksuny.model.Sysrole" >
    insert into sysrole
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="desctxt != null" >
        desctxt,
      </if>
      <if test="buttons != null" >
        buttons,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="desctxt != null" >
        #{desctxt,jdbcType=VARCHAR},
      </if>
      <if test="buttons != null" >
        #{buttons,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rocksuny.model.Sysrole" >
    update sysrole
    <set >
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="desctxt != null" >
        desctxt = #{desctxt,jdbcType=VARCHAR},
      </if>
      <if test="buttons != null" >
        buttons = #{buttons,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rocksuny.model.Sysrole" >
    update sysrole
    set rolename = #{rolename,jdbcType=VARCHAR},
      desctxt = #{desctxt,jdbcType=VARCHAR},
      buttons = #{buttons,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE},
      create_user = #{createUser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>